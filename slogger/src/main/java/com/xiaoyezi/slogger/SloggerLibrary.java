package com.xiaoyezi.slogger;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
/**
 * JNA Wrapper for library <b>slogger</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SloggerLibrary implements Library {
	public static final String JNA_LIBRARY_NAME = "slogger";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(SloggerLibrary.JNA_LIBRARY_NAME);
	static {
		Native.register(SloggerLibrary.class, SloggerLibrary.JNA_NATIVE_LIB);
	}
	public interface FileCallback extends Callback {
		void apply(Pointer fileFullPath);
	};
	public interface ErrorCallback extends Callback {
		void apply(Pointer errorMsg);
	};
	public static native void init(String logDir, SloggerLibrary.FileCallback fileCallback, SloggerLibrary.ErrorCallback errorCallback);
	public static native void startRecord();
	public static native void stopRecord();
	public static native void logTag(String tag, String msg);
	public static native void logMsg(String msg);
	public static native int getSocketPort();
}
